[{"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\index.js":"1","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\serviceWorker.js":"2","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\LayoutContext.js":"3","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\App.js":"4","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\UserContext.js":"5","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\index.js":"6","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\Layout.js":"7","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\default.js":"8","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\Error.js":"9","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\Login.js":"10","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\styles.js":"11","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\styles.js":"12","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\styles.js":"13","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\Charts.js":"14","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\Icons.js":"15","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\tables\\Tables.js":"16","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\Maps.js":"17","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\Notifications.js":"18","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\Typography.js":"19","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\Dashboard.js":"20","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\Sidebar.js":"21","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\Header.js":"22","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\styles.js":"23","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\mock.js":"24","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\styles.js":"25","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\styles.js":"26","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexLineChart.js":"27","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexHeatmap.js":"28","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\styles.js":"29","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\Dot.js":"30","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"31","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\styles.js":"32","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\Table\\Table.js":"33","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\styles.js":"35","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\Widget.js":"36","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Wrappers\\Wrappers.js":"37","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\PageTitle.js":"38","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\Notification.js":"39","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\UserAvatar.js":"40","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\styles.js":"41","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"42","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"43","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\styles.js":"44","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\styles.js":"45","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\styles.js":"46","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\styles.js":"47"},{"size":898,"mtime":1671752089191,"results":"48","hashOfConfig":"49"},{"size":5083,"mtime":1671062748739,"results":"50","hashOfConfig":"49"},{"size":1444,"mtime":1671062748710,"results":"51","hashOfConfig":"49"},{"size":1787,"mtime":1671062748689,"results":"52","hashOfConfig":"49"},{"size":4135,"mtime":1671066718352,"results":"53","hashOfConfig":"49"},{"size":534,"mtime":1671062748740,"results":"54","hashOfConfig":"49"},{"size":4577,"mtime":1671062748693,"results":"55","hashOfConfig":"49"},{"size":3157,"mtime":1671071433231,"results":"56","hashOfConfig":"49"},{"size":1626,"mtime":1671062748721,"results":"57","hashOfConfig":"49"},{"size":8083,"mtime":1671080464967,"results":"58","hashOfConfig":"49"},{"size":3321,"mtime":1671080344113,"results":"59","hashOfConfig":"49"},{"size":1395,"mtime":1671062748723,"results":"60","hashOfConfig":"49"},{"size":710,"mtime":1671062748694,"results":"61","hashOfConfig":"49"},{"size":5790,"mtime":1671062748713,"results":"62","hashOfConfig":"49"},{"size":391433,"mtime":1671062748724,"results":"63","hashOfConfig":"49"},{"size":2146,"mtime":1671062748735,"results":"64","hashOfConfig":"49"},{"size":1010,"mtime":1671062748729,"results":"65","hashOfConfig":"49"},{"size":13862,"mtime":1671062748731,"results":"66","hashOfConfig":"49"},{"size":4632,"mtime":1671062748737,"results":"67","hashOfConfig":"49"},{"size":16257,"mtime":1671753238603,"results":"68","hashOfConfig":"49"},{"size":4429,"mtime":1671694766869,"results":"69","hashOfConfig":"49"},{"size":10262,"mtime":1671691647308,"results":"70","hashOfConfig":"49"},{"size":812,"mtime":1671062748726,"results":"71","hashOfConfig":"49"},{"size":4288,"mtime":1671062748719,"results":"72","hashOfConfig":"49"},{"size":389,"mtime":1671062748738,"results":"73","hashOfConfig":"49"},{"size":3000,"mtime":1671062748720,"results":"74","hashOfConfig":"49"},{"size":1396,"mtime":1671062748714,"results":"75","hashOfConfig":"49"},{"size":1909,"mtime":1671062748714,"results":"76","hashOfConfig":"49"},{"size":1363,"mtime":1671062748703,"results":"77","hashOfConfig":"49"},{"size":902,"mtime":1671062748700,"results":"78","hashOfConfig":"49"},{"size":4589,"mtime":1671062748701,"results":"79","hashOfConfig":"49"},{"size":4043,"mtime":1671071251346,"results":"80","hashOfConfig":"49"},{"size":1323,"mtime":1671062748718,"results":"81","hashOfConfig":"49"},{"size":4160,"mtime":1671062748717,"results":"82","hashOfConfig":"49"},{"size":1943,"mtime":1671062748734,"results":"83","hashOfConfig":"49"},{"size":2581,"mtime":1671062748706,"results":"84","hashOfConfig":"49"},{"size":3971,"mtime":1671062748708,"results":"85","hashOfConfig":"49"},{"size":447,"mtime":1671062748697,"results":"86","hashOfConfig":"49"},{"size":3413,"mtime":1671062748695,"results":"87","hashOfConfig":"49"},{"size":620,"mtime":1671062748704,"results":"88","hashOfConfig":"49"},{"size":178,"mtime":1671062748730,"results":"89","hashOfConfig":"49"},{"size":1474,"mtime":1671062748702,"results":"90","hashOfConfig":"49"},{"size":1075,"mtime":1671062748717,"results":"91","hashOfConfig":"49"},{"size":1015,"mtime":1671062748708,"results":"92","hashOfConfig":"49"},{"size":482,"mtime":1671062748698,"results":"93","hashOfConfig":"49"},{"size":1040,"mtime":1671062748696,"results":"94","hashOfConfig":"49"},{"size":291,"mtime":1671062748705,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"8ky24k",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\index.js",[],["194","195"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\serviceWorker.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\LayoutContext.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\App.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\UserContext.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\index.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\Layout.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\default.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\Error.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\Login.js",["196","197"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin\");\r\n  var [passwordValue, setPasswordValue] = useState(\"admin\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <hr className={classes.logoLine}></hr>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <hr className={classes.logoLine}></hr>\r\n        {/*<Typography className={classes.logotypeText}>Cheil Electric</Typography>*/}\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Smart Care\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 1955-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"http://www.cheilelec.com/\" rel=\"noopener noreferrer\" target=\"_blank\">CHEIL ELECTRIC CO.</a>, LTD. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\Charts.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\Icons.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\tables\\Tables.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\Maps.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\Notifications.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\Typography.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\Dashboard.js",["198","199"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\Sidebar.js",["200"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SupervisorAccount,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Users\", link: \"/app/tables\", icon: <SupervisorAccount /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, type: \"title\", label: \"HELP\" },\r\n  { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  { id: 10, type: \"divider\" },\r\n  { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  {\r\n    id: 12,\r\n    label: \"My recent\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"warning\" />,\r\n  },\r\n  {\r\n    id: 13,\r\n    label: \"Starred\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"primary\" />,\r\n  },\r\n  {\r\n    id: 14,\r\n    label: \"Background\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\Header.js",["201","202"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Cheil Smart Care\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {localStorage.getItem('username')}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"http://www.cheilelec.com\"\r\n            >\r\n              cheilelec.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\mock.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\Widget.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\Notification.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\styles.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":13,"column":8,"nodeType":"209","messageId":"210","endLine":13,"endColumn":18},{"ruleId":"207","severity":1,"message":"211","line":20,"column":8,"nodeType":"209","messageId":"210","endLine":20,"endColumn":14},{"ruleId":"207","severity":1,"message":"212","line":37,"column":8,"nodeType":"209","messageId":"210","endLine":37,"endColumn":12},{"ruleId":"207","severity":1,"message":"213","line":50,"column":14,"nodeType":"209","messageId":"210","endLine":50,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":8,"column":16,"nodeType":"209","messageId":"210","endLine":8,"endColumn":25},{"ruleId":"207","severity":1,"message":"215","line":10,"column":3,"nodeType":"209","messageId":"210","endLine":10,"endColumn":7},{"ruleId":"207","severity":1,"message":"216","line":27,"column":29,"nodeType":"209","messageId":"210","endLine":27,"endColumn":35},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'classnames' is defined but never used.","Identifier","unusedVar","'google' is defined but never used.","'i18n' is defined but never used.","'i18n' is assigned a value but never used.","'TableIcon' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]