[{"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\index.js":"1","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\serviceWorker.js":"2","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\LayoutContext.js":"3","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\App.js":"4","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\UserContext.js":"5","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\index.js":"6","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\Layout.js":"7","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\default.js":"8","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\Error.js":"9","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\Login.js":"10","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\styles.js":"11","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\styles.js":"12","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\styles.js":"13","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\Charts.js":"14","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\Icons.js":"15","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\tables\\Tables.js":"16","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\Maps.js":"17","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\Notifications.js":"18","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\Typography.js":"19","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\Dashboard.js":"20","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\Sidebar.js":"21","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\Header.js":"22","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\styles.js":"23","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\mock.js":"24","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\styles.js":"25","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\styles.js":"26","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexLineChart.js":"27","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexHeatmap.js":"28","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\styles.js":"29","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\Dot.js":"30","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"31","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\styles.js":"32","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\Table\\Table.js":"33","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"34","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\styles.js":"35","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\Widget.js":"36","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Wrappers\\Wrappers.js":"37","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\PageTitle.js":"38","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\Notification.js":"39","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\UserAvatar.js":"40","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\styles.js":"41","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"42","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"43","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\styles.js":"44","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\styles.js":"45","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\styles.js":"46","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\styles.js":"47","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\index.js":"48","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\en-US\\index.js":"49","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\ko-KR\\index.js":"50","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\zh-CN\\index.js":"51","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\TranslationI18N.js":"52"},{"size":914,"mtime":1672095338182,"results":"53","hashOfConfig":"54"},{"size":5083,"mtime":1671062748739,"results":"55","hashOfConfig":"54"},{"size":1444,"mtime":1671062748710,"results":"56","hashOfConfig":"54"},{"size":1787,"mtime":1671062748689,"results":"57","hashOfConfig":"54"},{"size":4138,"mtime":1672019694215,"results":"58","hashOfConfig":"54"},{"size":534,"mtime":1671062748740,"results":"59","hashOfConfig":"54"},{"size":4577,"mtime":1672044098014,"results":"60","hashOfConfig":"54"},{"size":3157,"mtime":1671071433231,"results":"61","hashOfConfig":"54"},{"size":1626,"mtime":1671062748721,"results":"62","hashOfConfig":"54"},{"size":8073,"mtime":1672019694227,"results":"63","hashOfConfig":"54"},{"size":3321,"mtime":1671080344113,"results":"64","hashOfConfig":"54"},{"size":1395,"mtime":1671062748723,"results":"65","hashOfConfig":"54"},{"size":710,"mtime":1671062748694,"results":"66","hashOfConfig":"54"},{"size":5790,"mtime":1671062748713,"results":"67","hashOfConfig":"54"},{"size":391433,"mtime":1671062748724,"results":"68","hashOfConfig":"54"},{"size":2146,"mtime":1672044131611,"results":"69","hashOfConfig":"54"},{"size":1010,"mtime":1671062748729,"results":"70","hashOfConfig":"54"},{"size":13862,"mtime":1671062748731,"results":"71","hashOfConfig":"54"},{"size":4632,"mtime":1671062748737,"results":"72","hashOfConfig":"54"},{"size":16253,"mtime":1672044120569,"results":"73","hashOfConfig":"54"},{"size":4494,"mtime":1672096789059,"results":"74","hashOfConfig":"54"},{"size":10262,"mtime":1671691647308,"results":"75","hashOfConfig":"54"},{"size":812,"mtime":1671062748726,"results":"76","hashOfConfig":"54"},{"size":4288,"mtime":1671062748719,"results":"77","hashOfConfig":"54"},{"size":389,"mtime":1671062748738,"results":"78","hashOfConfig":"54"},{"size":3000,"mtime":1671062748720,"results":"79","hashOfConfig":"54"},{"size":1396,"mtime":1671062748714,"results":"80","hashOfConfig":"54"},{"size":1909,"mtime":1671062748714,"results":"81","hashOfConfig":"54"},{"size":1363,"mtime":1671062748703,"results":"82","hashOfConfig":"54"},{"size":902,"mtime":1671062748700,"results":"83","hashOfConfig":"54"},{"size":4731,"mtime":1672096898959,"results":"84","hashOfConfig":"54"},{"size":4043,"mtime":1671071251346,"results":"85","hashOfConfig":"54"},{"size":1323,"mtime":1672044155378,"results":"86","hashOfConfig":"54"},{"size":4160,"mtime":1671062748717,"results":"87","hashOfConfig":"54"},{"size":1943,"mtime":1671062748734,"results":"88","hashOfConfig":"54"},{"size":2581,"mtime":1671062748706,"results":"89","hashOfConfig":"54"},{"size":3971,"mtime":1671062748708,"results":"90","hashOfConfig":"54"},{"size":447,"mtime":1671062748697,"results":"91","hashOfConfig":"54"},{"size":3413,"mtime":1671062748695,"results":"92","hashOfConfig":"54"},{"size":620,"mtime":1671062748704,"results":"93","hashOfConfig":"54"},{"size":178,"mtime":1671062748730,"results":"94","hashOfConfig":"54"},{"size":1474,"mtime":1671062748702,"results":"95","hashOfConfig":"54"},{"size":1075,"mtime":1671062748717,"results":"96","hashOfConfig":"54"},{"size":1015,"mtime":1671062748708,"results":"97","hashOfConfig":"54"},{"size":482,"mtime":1671062748698,"results":"98","hashOfConfig":"54"},{"size":1040,"mtime":1671062748696,"results":"99","hashOfConfig":"54"},{"size":291,"mtime":1671062748705,"results":"100","hashOfConfig":"54"},{"size":1905,"mtime":1672019694217,"results":"101","hashOfConfig":"54"},{"size":62,"mtime":1672019694219,"results":"102","hashOfConfig":"54"},{"size":62,"mtime":1672019694220,"results":"103","hashOfConfig":"54"},{"size":62,"mtime":1672019694223,"results":"104","hashOfConfig":"54"},{"size":169,"mtime":1672096691043,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"8ky24k",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\index.js",[],["216","217"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\serviceWorker.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\LayoutContext.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\App.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\context\\UserContext.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\index.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\Layout.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\themes\\default.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\Error.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\Login.js",["218","219"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <hr className={classes.logoLine}></hr>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <hr className={classes.logoLine}></hr>\r\n        {/*<Typography className={classes.logotypeText}>Cheil Electric</Typography>*/}\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Smart Care\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 1955-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"http://www.cheilelec.com/\" rel=\"noopener noreferrer\" target=\"_blank\">CHEIL ELECTRIC CO.</a>, LTD. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\login\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\error\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Layout\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\Charts.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\Icons.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\tables\\Tables.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\Maps.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\Notifications.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\Typography.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\Dashboard.js",["220","221"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  const { t, i18n } = useTranslation(['page'])\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" button={<Button\r\n      variant=\"contained\"\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n    >\r\n        Latest Reports\r\n    </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title={t('방문자수')}\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                12, 678\r\n              </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n              <LineChart\r\n                width={100}\r\n                height={30}\r\n                data={[\r\n                  { value: 10 },\r\n                  { value: 15 },\r\n                  { value: 10 },\r\n                  { value: 17 },\r\n                  { value: 18 },\r\n                ]}\r\n              >\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"value\"\r\n                  stroke={theme.palette.success.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                />\r\n              </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title={t(\"성능\")}\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\Sidebar.js",["222","223"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\Header.js",["224","225"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Cheil Smart Care\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              {localStorage.getItem('username')}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"http://www.cheilelec.com\"\r\n            >\r\n              cheilelec.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\icons\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\mock.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\typography\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["226","227"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Header\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\notifications\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\Widget.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\Notification.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\maps\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Widget\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\PageTitle\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\Notification\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\components\\UserAvatar\\styles.js",[],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\index.js",["228"],"import i18n from \"i18next\";\r\n\r\n// npm install react-i18next i18next --save\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\n// # if you'd like to detect user language and load translation\r\n// npm install i18next-http-backend i18next-browser-languagedetector --save\r\nimport detector from \"i18next-browser-languagedetector\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\n\r\nimport en from './locales/en-US';\r\nimport ko from './locales/ko-KR';\r\nimport cn from './locales/zh-CN';\r\n\r\ni18n\r\n  // .use(Backend)  //백엔드에서 리소스 가져올시\r\n  .use(detector)  //사용자 언어 감지 : https://github.com/i18next/i18next-browser-languageDetect\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    // the translations\r\n    // (tip move them in a JSON file and import them,\r\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    resources: {\r\n        ko:ko,\r\n        en:en,\r\n        cn:cn\r\n    },\r\n    // lng: \"ko\", //언어 감지기를 상요하는 경우 옵션 정의 X\r\n    fallbackLng: \"en\",\r\n    detection: { // languagedetector option\r\n      order: ['querystring', 'htmlTag', 'cookie'], // detect 우선순위 \r\n      lookupQueryString: 'lang', // ?lang=\r\n      lookupCookie: 'i18n_lang' // cookie name\r\n    },\r\n    debug: true,\r\n    saveMissing: true, //변환되지않는 키를 엔드포인트로 보냅니다.\r\n    // keySeparator: false, //메세지 형식에서 키를 사용하지 않습니다.\r\n    // ns:['pageKo','pageEn','pageCn'],    //ns는 namespace로 label, button, menu 등 구분해서 관리할 경우 필요\r\n    interpolation: {\r\n      escapeValue: false  \r\n    }\r\n  }, function(err) {\r\n    if(err) console.error(err);\r\n  });\r\n\r\n  export default i18n","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\en-US\\index.js",["229"],"import page from './page.json'\r\n\r\nexport default{\r\n    page\r\n}","D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\ko-KR\\index.js",["230"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\locales\\zh-CN\\index.js",["231"],"D:\\01_projects\\cheil_smartcare_server\\source\\cheil_smartcare_server\\frontend\\src\\i18n\\TranslationI18N.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":13,"column":8,"nodeType":"238","messageId":"239","endLine":13,"endColumn":18},{"ruleId":"236","severity":1,"message":"240","line":20,"column":8,"nodeType":"238","messageId":"239","endLine":20,"endColumn":14},{"ruleId":"236","severity":1,"message":"241","line":37,"column":8,"nodeType":"238","messageId":"239","endLine":37,"endColumn":12},{"ruleId":"236","severity":1,"message":"242","line":50,"column":14,"nodeType":"238","messageId":"239","endLine":50,"endColumn":18},{"ruleId":"236","severity":1,"message":"243","line":8,"column":16,"nodeType":"238","messageId":"239","endLine":8,"endColumn":25},{"ruleId":"236","severity":1,"message":"244","line":33,"column":10,"nodeType":"238","messageId":"239","endLine":33,"endColumn":25},{"ruleId":"236","severity":1,"message":"245","line":10,"column":3,"nodeType":"238","messageId":"239","endLine":10,"endColumn":7},{"ruleId":"236","severity":1,"message":"246","line":27,"column":29,"nodeType":"238","messageId":"239","endLine":27,"endColumn":35},{"ruleId":"236","severity":1,"message":"241","line":22,"column":8,"nodeType":"238","messageId":"239","endLine":22,"endColumn":12},{"ruleId":"236","severity":1,"message":"242","line":36,"column":14,"nodeType":"238","messageId":"239","endLine":36,"endColumn":18},{"ruleId":"236","severity":1,"message":"247","line":10,"column":8,"nodeType":"238","messageId":"239","endLine":10,"endColumn":15},{"ruleId":"248","severity":1,"message":"249","line":3,"column":1,"nodeType":"250","endLine":5,"endColumn":2},{"ruleId":"248","severity":1,"message":"249","line":3,"column":1,"nodeType":"250","endLine":5,"endColumn":2},{"ruleId":"248","severity":1,"message":"249","line":3,"column":1,"nodeType":"250","endLine":5,"endColumn":2},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'classnames' is defined but never used.","Identifier","unusedVar","'google' is defined but never used.","'i18n' is defined but never used.","'i18n' is assigned a value but never used.","'TableIcon' is defined but never used.","'TranslationI18N' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Backend' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]